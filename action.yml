name: Install and cache APT packages
description: Cache APT packages to speed up your workflows

inputs:
  packages:
    description: APT packages to install
    required: true
  update:
    description: Update package lists before installing
    default: true
  cache:
    description: Cache the downloaded packages
    default: true
  install-recommends:
    description: Install recommended packages
    default: true
  install-suggests:
    description: Install suggested packages
    default: false

branding:
  icon: package
  color: orange

runs:
  using: "composite"
  steps:
    - name: Update package lists
      if: inputs.update && inputs.update != 'false'
      run: |
        sudo() {
          if [ $(id -u) -eq 0 ]; then
            "$@"
          else
            command sudo "$@"
          fi
        }

        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get update
      shell: bash
    - name: Save package list
      if: inputs.cache && inputs.cache != 'false'
      run: |
        sudo() {
          if [ $(id -u) -eq 0 ]; then
            "$@"
          else
            command sudo "$@"
          fi
        }

        mkdir .apt-install

        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get install \
          --dry-run \
          ${{ (! inputs.install-recommends || inputs.install-recommends == 'false') && '--no-install-recommends' || '' }} \
          ${{ inputs.install-suggests && inputs.install-suggests != 'false' && '--install-suggests' || '' }} \
          -y \
          ${{ inputs.packages }} \
        | grep '^Inst' \
        | sed 's/^Inst //' \
        | sort \
        > .apt-install/versions.txt

        awk '{print $1}' .apt-install/versions.txt > .apt-install/packages.txt
      shell: bash
    - name: Get OS version
      id: os-version
      if: inputs.cache && inputs.cache != 'false'
      uses: sersoft-gmbh/os-version-action@v3
    - name: Restore cache
      if: inputs.cache && inputs.cache != 'false'
      id: cache
      uses: actions/cache/restore@v4
      with:
        path: .apt-install/packages
        key: apt-install-${{ runner.arch }}-${{ steps.os-version.outputs.version }}-${{ hashFiles('.apt-install/packages.txt') }}-${{ hashFiles('.apt-install/versions.txt') }}
        restore-keys: |
          apt-install-${{ runner.arch }}-${{ steps.os-version.outputs.version }}-${{ hashFiles('.apt-install/packages.txt') }}-
    - name: Download packages
      if: inputs.cache && inputs.cache != 'false' && steps.cache.outputs.cache-hit != 'true'
      run: |
        mkdir .apt-install/packages
        cd .apt-install/packages
        touch versions.txt

        comm -23 ../versions.txt versions.txt | awk '{print $1}' > downloads.txt
        cat downloads.txt | xargs -I {} rm -f {}_*.deb
        [ ! -s downloads.txt ] || apt-get download $(cat downloads.txt) || true

        cp ../versions.txt versions.txt
        rm -f downloads.txt
      shell: bash
    - name: Save cache
      if: inputs.cache && inputs.cache != 'false' && steps.cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: .apt-install/packages
        key: ${{ steps.cache.outputs.cache-primary-key }}
    - name: Install cached packages
      if: inputs.cache && inputs.cache != 'false'
      run: |
        sudo() {
          if [ $(id -u) -eq 0 ]; then
            "$@"
          else
            command sudo "$@"
          fi
        }

        export DEBIAN_FRONTEND=noninteractive
        sudo dpkg -Ri .apt-install/packages || true
        sudo apt-get -f install -y || true
      shell: bash
    - name: Clean up
      if: always() && inputs.cache && inputs.cache != 'false'
      run: rm -rf .apt-install
      shell: bash
    - name: Install uncached packages
      run: |
        sudo() {
          if [ $(id -u) -eq 0 ]; then
            "$@"
          else
            command sudo "$@"
          fi
        }

        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get install \
          ${{ (! inputs.install-recommends || inputs.install-recommends == 'false') && '--no-install-recommends' || '' }} \
          ${{ inputs.install-suggests && inputs.install-suggests != 'false' && '--install-suggests' || '' }} \
          -y \
          ${{ inputs.packages }}
      shell: bash
